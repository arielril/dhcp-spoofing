<?xml version='1.0' encoding='UTF-8'?>
<scenario name="/vagrant/scripts/topos/topo-example.xml">
  <networks>
    <network id="3" name="n3" type="SWITCH">
      <position x="406" y="234" lat="47.57703967644793" lon="-122.12685125991972" alt="2.0"/>
    </network>
  </networks>
  <devices>
    <device id="1" name="n1" type="host" class="" image="">
      <position x="135" y="159" lat="47.577721424175145" lon="-122.13050291154966" alt="2.0"/>
      <services>
        <service name="DHCPClient"/>
      </services>
    </device>
    <device id="2" name="n2" type="host" class="" image="">
      <position x="708" y="184" lat="47.577494175919036" lon="-122.12278189168265" alt="2.0"/>
      <services>
        <service name="DHCP"/>
        <service name="UserDefined"/>
      </services>
    </device>
    <device id="5" name="n5" type="host" class="" image="">
      <position x="136" y="289" lat="47.57653972247301" lon="-122.1304894368204" alt="2.0"/>
      <services>
        <service name="DHCPClient"/>
      </services>
    </device>
    <device id="6" name="n6" type="host" class="" image="">
      <position x="663" y="379" lat="47.57572160567164" lon="-122.12338825449943" alt="2.0"/>
      <services>
        <service name="DefaultRoute"/>
        <service name="UserDefined"/>
      </services>
    </device>
  </devices>
  <links>
    <link node_one="3" node_two="1">
      <interface_two id="0" name="eth0" mac="00:00:00:aa:00:0f"/>
      <options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="LinkTypes.WIRED" unidirectional="0"/>
    </link>
    <link node_one="3" node_two="5">
      <interface_two id="0" name="eth0" mac="00:00:00:aa:00:0e"/>
      <options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="LinkTypes.WIRED" unidirectional="0"/>
    </link>
    <link node_one="3" node_two="2">
      <interface_two id="0" name="eth0" mac="00:00:00:aa:00:02" ip4="10.0.0.10" ip4_mask="24"/>
      <options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="LinkTypes.WIRED" unidirectional="0"/>
    </link>
    <link node_one="3" node_two="6">
      <interface_two id="0" name="eth0" mac="00:00:00:aa:00:03" ip4="10.0.0.11" ip4_mask="24"/>
      <options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="LinkTypes.WIRED" unidirectional="0"/>
    </link>
  </links>
  <emane_global_configuration>
    <emulator/>
    <core>
      <configuration name="platform_id_start" value="1"/>
      <configuration name="nem_id_start" value="1"/>
      <configuration name="link_enabled" value="1"/>
      <configuration name="loss_threshold" value="30"/>
      <configuration name="link_interval" value="1"/>
      <configuration name="link_timeout" value="4"/>
    </core>
  </emane_global_configuration>
  <service_configurations>
    <service name="DHCPClient" node="1">
      <directories>
        <directory>/var/run/resolvconf</directory>
      </directories>
      <startups>
        <startup>sh startdhcpclient.sh</startup>
      </startups>
      <validates>
        <validate>pidof dhclient</validate>
      </validates>
      <shutdowns>
        <shutdown>killall dhclient</shutdown>
      </shutdowns>
      <files>
        <file name="startdhcpclient.sh"><![CDATA[
#!/bin/sh # auto-generated by DHCPClient service (utility.py) # uncomment this mkdir line and symlink line to enable client-side DNS # resolution based on the DHCP server response. 

mkdir -p /var/run/resolvconf/interface 

ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf 

/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
]]></file>
      </files>
    </service>
    <service name="UserDefined" node="2">
      <directories>
        <directory>/var/cache/bind</directory>
      </directories>
      <startups>
        <startup>sh startbind.sh</startup>
      </startups>
      <files>
        <file name="/var/cache/bind/teste.com.zone"><![CDATA[
$TTL 86400 
  @ IN SOA teste.com root.teste.com ( 
	2018050600 
	3600 
	900 
	604800 
	86400 )
  @ IN NS server www 
	IN A 10.0.0.10 server 
	IN A 10.0.0.20 client 
	IN A 10.0.0.30
]]></file>
        <file name="startbind.sh"><![CDATA[
# configure named files over existing folder 

mount -n --bind named.conf.local /etc/bind/named.conf.local 
mount -n --bind named.conf.options /etc/bind/named.conf.options 

# start bind9 
/etc/init.d/bind9 restart
]]></file>
        <file name="/var/cache/bind/google.com.zone"><![CDATA[
$TTL 86400 
  @ IN SOA google.com root.google.com ( 
	2018050600 
	3600 
	900 
	604800 
	86400 ) 
  @ IN NS server www 
	IN A 10.0.0.10 server 
	IN A 10.0.0.20 client 
	IN A 10.0.0.30
]]></file>
        <file name="named.conf.local"><![CDATA[
zone "teste.com" IN { 
   type master; 
   file "teste.com.zone"; 
}; 

zone "google.com" IN { 
  type master; 
  file "google.com.zone"; 
};
]]></file>
        <file name="named.conf.options"><![CDATA[
options { 
  directory "/var/cache/bind"; 
  listen-on port 53 { 
    localhost;10.0.0.0/24; 
  }; 
  allow-query { 
    localhost; 
    10.0.0.0/24;
  }; 
  forwarders { 8.8.8.8; }; 
  recursion yes; 
};
]]></file>
      </files>
    </service>
    <service name="DHCP" node="2">
      <directories>
        <directory>/etc/dhcp</directory>
        <directory>/var/lib/dhcp</directory>
      </directories>
      <startups>
        <startup>touch /var/lib/dhcp/dhcpd.leases</startup>
        <startup>dhcpd</startup>
      </startups>
      <validates>
        <validate>pidof dhcpd</validate>
      </validates>
      <shutdowns>
        <shutdown>killall dhcpd</shutdown>
      </shutdowns>
      <files>
        <file name="/etc/dhcp/dhcpd.conf"><![CDATA[
# auto-generated by DHCP service (utility.py) # NOTE: move these option lines into the desired pool { } block(s) below 

option domain-name "teste.com"; 
option domain-name-servers 10.0.0.10; 
#option routers 10.0.0.1; 

log-facility local6; 
default-lease-time 600; 

max-lease-time 7200; 

ddns-update-style none; 

subnet 10.0.0.0 netmask 255.255.255.0 { 
  pool { 
    range 10.0.0.127 10.0.0.254; 
    default-lease-time 600; 
    option routers 10.0.0.1; 
  } 
}
]]></file>
      </files>
    </service>
    <service name="DHCPClient" node="5">
      <directories>
        <directory>/var/run/resolvconf</directory>
      </directories>
      <startups>
        <startup>sh startdhcpclient.sh</startup>
      </startups>
      <validates>
        <validate>pidof dhclient</validate>
      </validates>
      <shutdowns>
        <shutdown>killall dhclient</shutdown>
      </shutdowns>
      <files>
        <file name="startdhcpclient.sh"><![CDATA[
#!/bin/sh # auto-generated by DHCPClient service (utility.py) # uncomment this mkdir line and symlink line to enable client-side DNS # resolution based on the DHCP server response. 

mkdir -p /var/run/resolvconf/interface 

ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf 

/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
]]></file>
      </files>
    </service>
    <service name="UserDefined" node="6">
      <directories>
        <directory>/var/cache/bind</directory>
      </directories>
      <startups>
        <startup>sh startbind.sh</startup>
      </startups>
      <files>
        <file name="/var/cache/bind/teste.com.zone"><![CDATA[
$TTL 86400 

@ IN SOA teste.com root.teste.com ( 
	2018050600 
	3600 
	900 
	604800 
	86400 )
@ IN NS server 
	www IN A 10.0.0.210 
	server IN A 10.0.0.220 
	client IN A 10.0.0.230
]]></file>
        <file name="startbind.sh"><![CDATA[
# configure named files over existing folder 

mount -n --bind named.conf.local /etc/bind/named.conf.local 
mount -n --bind named.conf.options /etc/bind/named.conf.options 

# start bind9 
/etc/init.d/bind9 restart
]]></file>
        <file name="/var/cache/bind/google.com.zone"><![CDATA[
$TTL 86400 
  @ IN SOA google.com root.google.com ( 
	2018050600 
	3600 
	900 
	604800 
	86400 ) 
  @ IN NS server 
	www IN A 10.0.0.110 
	server IN A 10.0.0.120 
	client IN A 10.0.0.130
]]></file>
        <file name="named.conf.local"><![CDATA[
zone "teste.com" IN { 
   type master; 
   file "teste.com.zone"; 
}; 

zone "google.com" IN { 
  type master; 
  file "google.com.zone"; 
};
]]></file>
        <file name="named.conf.options"><![CDATA[
options { 
  directory "/var/cache/bind"; 
  listen-on port 53 { 
    localhost;
    10.0.0.0/24; 
  }; 
  allow-query { 
    localhost; 
    10.0.0.0/24;
  }; 
  forwarders { 8.8.8.8; }; 
  recursion yes; 
};
]]></file>
      </files>
    </service>
    <service name="DHCP" node="6">
      <directories>
        <directory>/etc/dhcp</directory>
        <directory>/var/lib/dhcp</directory>
      </directories>
      <startups>
        <startup>touch /var/lib/dhcp/dhcpd.leases</startup>
        <startup>dhcpd</startup>
      </startups>
      <validates>
        <validate>pidof dhcpd</validate>
      </validates>
      <shutdowns>
        <shutdown>killall dhcpd</shutdown>
      </shutdowns>
      <files>
        <file name="/etc/dhcp/dhcpd.conf"><![CDATA[
# auto-generated by DHCP service (utility.py) # NOTE: move these option lines into the desired pool { } block(s) below 

#option domain-name "teste.com"; 
#option domain-name-servers 10.0.0.10; 
#option routers 10.0.0.1; 

log-facility local6; 
default-lease-time 600; 

max-lease-time 7200; 

ddns-update-style none; 

subnet 10.0.0.0 netmask 255.255.255.0 { 
  pool { 
    range 10.0.0.127 10.0.0.254; 
    default-lease-time 600; 
    option routers 10.0.0.1; 
  } 
}
]]></file>
      </files>
    </service>
  </service_configurations>
  <session_origin lat="47.5791667" lon="-122.132322" alt="2.0" scale="150.0"/>
  <session_options>
    <configuration name="controlnet" value=""/>
    <configuration name="controlnet0" value=""/>
    <configuration name="controlnet1" value=""/>
    <configuration name="controlnet2" value=""/>
    <configuration name="controlnet3" value=""/>
    <configuration name="controlnet_updown_script" value=""/>
    <configuration name="enablerj45" value="1"/>
    <configuration name="preservedir" value="0"/>
    <configuration name="enablesdt" value="0"/>
    <configuration name="sdturl" value="tcp://127.0.0.1:50000/"/>
  </session_options>
  <session_metadata>
    <configuration name="canvas c1" value="{name {Canvas1}}"/>
    <configuration name="global_options" value="interface_names=yes ip_addresses=yes ipv6_addresses=no node_labels=yes link_labels=yes show_api=no background_images=no annotations=yes grid=yes traffic_start=0"/>
    <configuration name="annotation a1" value="{iconcoords {100.0 109.0}} {type text} {label {CLIENT}} {labelcolor black} {fontfamily {Arial}} {fontsize 12} {canvas c1}"/>
    <configuration name="annotation a2" value="{iconcoords {617.0 148.0}} {type text} {label {DHCP/DNS SERVER}} {labelcolor black} {fontfamily {Arial}} {fontsize 12} {canvas c1}"/>
    <configuration name="annotation a3" value="{type text} {iconcoords {694.0 184.0}} {label {}} {canvas c1}"/>
    <configuration name="annotation a4" value="{iconcoords {646.0 427.0}} {type text} {label {mys}} {labelcolor black} {fontfamily {Arial}} {fontsize 12} {canvas c1}"/>
  </session_metadata>
  <default_services>
    <node type="mdr">
      <service name="zebra"/>
      <service name="OSPFv3MDR"/>
      <service name="IPForward"/>
    </node>
    <node type="PC">
      <service name="DefaultRoute"/>
    </node>
    <node type="prouter"/>
    <node type="router">
      <service name="zebra"/>
      <service name="OSPFv2"/>
      <service name="OSPFv3"/>
      <service name="IPForward"/>
    </node>
    <node type="host">
      <service name="DefaultRoute"/>
      <service name="SSH"/>
    </node>
  </default_services>
</scenario>
