<scenario name="/vagrant/dhcp_dns.xml">
<networks>
<network id="3" name="n3" type="SWITCH">
<position x="404" y="168" lat="47.57763961491656" lon="-122.12687820937823" alt="2.0"/>
</network>
</networks>
<devices>
<device id="1" name="n1" type="host" class="" image="">
<position x="135" y="159" lat="47.577721424175145" lon="-122.13050291154966" alt="2.0"/>
<services>
<service name="DHCPClient"/>
</services>
</device>
<device id="2" name="n2" type="host" class="" image="">
<position x="679" y="204" lat="47.57731237660401" lon="-122.12317265883125" alt="2.0"/>
<services>
<service name="DHCP"/>
<service name="UserDefined"/>
</services>
</device>
<device id="4" name="n4" type="host" class="" image="">
<position x="655" y="305" lat="47.576394280420324" lon="-122.12349605233352" alt="2.0"/>
<services>
<service name="DHCP"/>
<service name="UserDefined"/>
</services>
</device>
<device id="5" name="n5" type="host" class="" image="">
<position x="143" y="254" lat="47.57685787555483" lon="-122.13039511371557" alt="2.0"/>
<services>
<service name="DHCPClient"/>
</services>
</device>
</devices>
<links>
<link node_one="3" node_two="1">
<interface_two id="0" name="eth0" mac="00:00:00:aa:00:0f"/>
<options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="1" unidirectional="0"/>
</link>
<link node_one="3" node_two="2">
<interface_two id="0" name="eth0" mac="00:00:00:aa:00:10" ip4="10.0.0.10" ip4_mask="24"/>
<options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="1" unidirectional="0"/>
</link>
<link node_one="3" node_two="4">
<interface_two id="0" name="eth0" mac="00:00:00:aa:00:20" ip4="10.0.0.20" ip4_mask="24"/>
<options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="1" unidirectional="0"/>
</link>
<link node_one="3" node_two="5">
<interface_two id="0" name="eth0" mac="00:00:00:aa:00:0e"/>
<options delay="0" bandwidth="0" per="0.0" dup="0" jitter="0" type="1" unidirectional="0"/>
</link>
</links>
<service_configurations>
<service name="DHCPClient" node="1">
<directories>
<directory>/var/run/resolvconf</directory>
</directories>
<startups>
<startup>sh startdhcpclient.sh</startup>
</startups>
<validates>
<validate>pidof dhclient</validate>
</validates>
<shutdowns>
<shutdown>killall dhclient</shutdown>
</shutdowns>
<files>
<file name="startdhcpclient.sh">
#!/bin/sh # auto-generated by DHCPClient service (utility.py) # uncomment this mkdir line and symlink line to enable client-side DNS # resolution based on the DHCP server response. mkdir -p /var/run/resolvconf/interface ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf /sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
</file>
</files>
</service>
<service name="UserDefined" node="2">
<directories>
<directory>/var/cache/bind</directory>
</directories>
<startups>
<startup>sh startbind.sh</startup>
</startups>
<files>
<file name="/var/cache/bind/google.com.zone">
$TTL 86400 @ IN SOA google.com root.google.com ( 2018050600 3600 900 604800 86400 ) @ IN NS server www IN A 10.0.0.10 server IN A 10.0.0.20 client IN A 10.0.0.30
</file>
<file name="named.conf.local">
zone "teste.com" IN { type master; file "teste.com.zone"; }; zone "google.com" IN { type master; file "google.com.zone"; };
</file>
<file name="named.conf.options">
options { directory "/var/cache/bind"; listen-on port 53 { localhost;10.0.0.0/24; }; allow-query { localhost; 10.0.0.0/24;}; forwarders { 8.8.8.8; }; recursion yes; };
</file>
<file name="startbind.sh">
# configure named files over existing folder mount -n --bind named.conf.local /etc/bind/named.conf.local mount -n --bind named.conf.options /etc/bind/named.conf.options # start bind9 /etc/init.d/bind9 restart
</file>
<file name="/var/cache/bind/teste.com.zone">
$TTL 86400 @ IN SOA teste.com root.teste.com ( 2018050600 3600 900 604800 86400 ) @ IN NS server www IN A 10.0.0.10 server IN A 10.0.0.20 client IN A 10.0.0.30
</file>
</files>
</service>
<service name="DHCP" node="2">
<directories>
<directory>/etc/dhcp</directory>
<directory>/var/lib/dhcp</directory>
</directories>
<startups>
<startup>touch /var/lib/dhcp/dhcpd.leases</startup>
<startup>dhcpd</startup>
</startups>
<validates>
<validate>pidof dhcpd</validate>
</validates>
<shutdowns>
<shutdown>killall dhcpd</shutdown>
</shutdowns>
<files>
<file name="/etc/dhcp/dhcpd.conf">
# auto-generated by DHCP service (utility.py) # NOTE: move these option lines into the desired pool { } block(s) below option domain-name "teste.com"; option domain-name-servers 10.0.0.10; #option routers 10.0.0.1; log-facility local6; default-lease-time 600; max-lease-time 7200; ddns-update-style none; subnet 10.0.0.0 netmask 255.255.255.0 { pool { range 10.0.0.127 10.0.0.254; default-lease-time 600; option routers 10.0.0.1; } }
</file>
</files>
</service>
<service name="UserDefined" node="4">
<directories>
<directory>/var/cache/bind</directory>
</directories>
<startups>
<startup>sh startbind.sh</startup>
</startups>
<files>
<file name="/var/cache/bind/google.com.zone">
$TTL 86400 @ IN SOA google.com root.google.com ( 2018050600 3600 900 604800 86400 ) @ IN NS server www IN A 10.0.0.20 server IN A 10.0.0.30 client IN A 10.0.0.10
</file>
<file name="named.conf.local">
zone "teste.com" IN { type master; file "teste.com.zone"; }; zone "google.com" IN { type master; file "google.com.zone"; };
</file>
<file name="named.conf.options">
options { directory "/var/cache/bind"; listen-on port 53 { localhost;10.0.0.0/24; }; allow-query { localhost; 10.0.0.0/24;}; forwarders { 8.8.8.8; }; recursion yes; };
</file>
<file name="startbind.sh">
# configure named files over existing folder mount -n --bind named.conf.local /etc/bind/named.conf.local mount -n --bind named.conf.options /etc/bind/named.conf.options # start bind9 /etc/init.d/bind9 restart
</file>
<file name="/var/cache/bind/teste.com.zone">
$TTL 86400 @ IN SOA teste.com root.teste.com ( 2018050600 3600 900 604800 86400 ) @ IN NS server www IN A 10.0.0.20 server IN A 10.0.0.30 client IN A 10.0.0.10
</file>
</files>
</service>
<service name="DHCP" node="4">
<directories>
<directory>/etc/dhcp</directory>
<directory>/var/lib/dhcp</directory>
</directories>
<startups>
<startup>touch /var/lib/dhcp/dhcpd.leases</startup>
<startup>dhcpd</startup>
</startups>
<validates>
<validate>pidof dhcpd</validate>
</validates>
<shutdowns>
<shutdown>killall dhcpd</shutdown>
</shutdowns>
<files>
<file name="/etc/dhcp/dhcpd.conf">
# auto-generated by DHCP service (utility.py) # NOTE: move these option lines into the desired pool { } block(s) below option domain-name "teste.com"; option domain-name-servers 10.0.0.20; #option routers 10.0.0.1; log-facility local6; default-lease-time 600; max-lease-time 7200; ddns-update-style none; subnet 10.0.0.0 netmask 255.255.255.0 { pool { range 10.0.0.100 10.0.0.126; default-lease-time 600; option routers 10.0.0.1; } }
</file>
</files>
</service>
<service name="DHCPClient" node="5">
<directories>
<directory>/var/run/resolvconf</directory>
</directories>
<startups>
<startup>sh startdhcpclient.sh</startup>
</startups>
<validates>
<validate>pidof dhclient</validate>
</validates>
<shutdowns>
<shutdown>killall dhclient</shutdown>
</shutdowns>
<files>
<file name="startdhcpclient.sh">
#!/bin/sh # auto-generated by DHCPClient service (utility.py) # uncomment this mkdir line and symlink line to enable client-side DNS # resolution based on the DHCP server response. mkdir -p /var/run/resolvconf/interface ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf /sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
</file>
</files>
</service>
</service_configurations>
<session_origin lat="47.5791667" lon="-122.132322" alt="2.0" scale="150.0"/>
<session_options>
<configuration name="controlnet" value=""/>
<configuration name="controlnet0" value=""/>
<configuration name="controlnet1" value=""/>
<configuration name="controlnet2" value=""/>
<configuration name="controlnet3" value=""/>
<configuration name="controlnet_updown_script" value=""/>
<configuration name="enablerj45" value="1"/>
<configuration name="preservedir" value="0"/>
<configuration name="enablesdt" value="0"/>
<configuration name="sdturl" value="tcp://127.0.0.1:50000/"/>
</session_options>
<session_metadata>
<configuration name="canvas c1" value="{name {Canvas1}}"/>
<configuration name="global_options" value="interface_names=no ip_addresses=yes ipv6_addresses=yes node_labels=yes link_labels=yes show_api=no background_images=no annotations=yes grid=yes traffic_start=0"/>
<configuration name="annotation a1" value="{iconcoords {100.0 109.0}} {type text} {label {CLIENT}} {labelcolor black} {fontfamily {Arial}} {fontsize 12} {canvas c1}"/>
<configuration name="annotation a2" value="{iconcoords {657.0 102.0}} {type text} {label {DHCP/DNS SERVER}} {labelcolor black} {fontfamily {Arial}} {fontsize 12} {canvas c1}"/>
<configuration name="annotation a3" value="{type text} {iconcoords {694.0 184.0}} {label {}} {canvas c1}"/>
</session_metadata>
<default_services>
<node type="mdr">
<service name="zebra"/>
<service name="OSPFv3MDR"/>
<service name="IPForward"/>
</node>
<node type="PC">
<service name="DefaultRoute"/>
</node>
<node type="prouter"/>
<node type="router">
<service name="zebra"/>
<service name="OSPFv2"/>
<service name="OSPFv3"/>
<service name="IPForward"/>
</node>
<node type="host">
<service name="DefaultRoute"/>
<service name="SSH"/>
</node>
</default_services>
</scenario>
